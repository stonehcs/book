(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{366:function(t,e,a){"use strict";a.r(e);var i=a(42),s=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"idea设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#idea设置"}},[t._v("#")]),t._v(" IDEA设置")]),t._v(" "),a("h2",{attrs:{id:"界面风格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#界面风格"}},[t._v("#")]),t._v(" 界面风格")]),t._v(" "),a("p",[t._v("良好的界面，是开始编码的第一步。File->Settings->Appearance & Behavior->Appearance->Theme选择自己喜欢的风格")]),t._v(" "),a("h2",{attrs:{id:"菜单栏字体-大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#菜单栏字体-大小"}},[t._v("#")]),t._v(" 菜单栏字体/大小")]),t._v(" "),a("p",[t._v("在工作中，时常碰见同事在一个特大的屏幕上，显示着赶紧要用放大镜查看的代码，实在是影响整体美观和编码。File->Settings->Appearance & Behavior->Appearance->勾选Use Custom font,设置Size(字体Microsoft YaHei,字体15)")]),t._v(" "),a("h2",{attrs:{id:"编码字体-大小-行间距"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编码字体-大小-行间距"}},[t._v("#")]),t._v(" 编码字体/大小/行间距")]),t._v(" "),a("p",[t._v("在工作过程中编写的文件字体和行间距等，同样影响着界面的美观度。File->Settings->Editor->Font->设置Font/Size/Line spacing(字体Microsoft YaHei,字体16,间隔1.4)")]),t._v(" "),a("blockquote",[a("p",[t._v("IDEA也支持向浏览器那样按住Ctrl+鼠标滚轴来改变编辑区的字体的大小，设置的开关在：File->Settings->Editor->General->勾选Change font size(Zoom) with Command+Mouse Whee!")])]),t._v(" "),a("h2",{attrs:{id:"jdk环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdk环境配置"}},[t._v("#")]),t._v(" JDK环境配置")]),t._v(" "),a("p",[t._v("项目的JDK如果不设置，项目中代码包含在一般java包下的类是全部飘红的。有很对时候我们无法定位项目到底出现了什么问题，往往大片大片代码飘红，都是JDK/MAVEN的设置问题导致项目环境或者依赖包没有正确导入。File->Project Structure->Project Settings->Project->Project SDK->选择自己安装的JDK")]),t._v(" "),a("h2",{attrs:{id:"maven环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven环境配置"}},[t._v("#")]),t._v(" MAVEN环境配置")]),t._v(" "),a("p",[t._v("当新建一个项目是，IDEA通常会使用使用默认绑定的MAVEN设置和仓库地址。一般来讲，开发人员都会维护和安装自己的MAVEN配置和仓库地址，这就需要在IDEA中进行配置，也方便在开发过程中管理自己的jar包，查询包异常等。File->settings->Build,Execution,Deployment->Maven->")]),t._v(" "),a("ol",[a("li",[t._v("选择自己的Maven home directory")]),t._v(" "),a("li",[t._v("勾选Override，User settings file选择安装好MAVEN的setting配置文件")]),t._v(" "),a("li",[t._v("勾选Override，Local repository选择配置的MAVEN仓库配置地址")])]),t._v(" "),a("h2",{attrs:{id:"设置统一编译器和编译版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置统一编译器和编译版本"}},[t._v("#")]),t._v(" 设置统一编译器和编译版本")]),t._v(" "),a("p",[t._v("编译器和编译版本设置最好jdk版本一致。File->Setting->Build->Compiler->Java Compiler")]),t._v(" "),a("h2",{attrs:{id:"文件头签名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件头签名"}},[t._v("#")]),t._v(" 文件头签名")]),t._v(" "),a("p",[t._v("所有的类都必须添加创建者和创建日期。File->Editor->File and Code Templates->Includes->File Header")]),t._v(" "),a("div",{staticClass:"language-java{} extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/**\n* @author cunsenjun\n* @date ${DATE} ${TIME}\n*/\n")])])]),a("h2",{attrs:{id:"terminal配置gitbash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terminal配置gitbash"}},[t._v("#")]),t._v(" Terminal配置gitbash")]),t._v(" "),a("p",[t._v("默认情况下，Terminal窗口在window环境下是支持cmd命令，可以设置其支持git命令，就可以在开发模式下，不用打开git bash，直接在Terminal窗口下输入git命令管理代码。File->settings->Tools->Terminal->Application settings->Shell path选择git安装的目录下的/bin/bash.exe\n如何使用git请参考"),a("RouterLink",{attrs:{to:"/idea/IDEA中使用git.html"}},[t._v("IDEA中使用git")])],1),t._v(" "),a("h2",{attrs:{id:"git配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git配置"}},[t._v("#")]),t._v(" git配置")]),t._v(" "),a("p",[t._v("项目代码管理，现在主流的就属git了。File->Settings->Version Control->Git->Path to Git executable选择安装git的目录下/bin/git.ext")]),t._v(" "),a("h2",{attrs:{id:"大小写不敏感"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大小写不敏感"}},[t._v("#")]),t._v(" 大小写不敏感")]),t._v(" "),a("p",[t._v("一般类名都是大写字母开头，在代码编写中，如果设置了大小写敏感，当输入小写字母时，IDEA是不会有类名提示出来的，相当影响开发效率。File->Settings->Editor->General->Code Completion ->将Match case勾选去掉")]),t._v(" "),a("h2",{attrs:{id:"显示行号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示行号"}},[t._v("#")]),t._v(" 显示行号")]),t._v(" "),a("p",[t._v("在文件中，显示行号有助于快速定位代码。File->Settings->Editor->General->Appearance->Show line numbers")]),t._v(" "),a("blockquote",[a("p",[t._v("在文件上左边右键->show line number也可以显示行号")])]),t._v(" "),a("h2",{attrs:{id:"文件上显示svn-git最近提交人"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件上显示svn-git最近提交人"}},[t._v("#")]),t._v(" 文件上显示svn/git最近提交人")]),t._v(" "),a("p",[t._v("在文件行号上右键->annotate显示每行代码的提交修改人，能很快定位到谁动过代码，定位问题。")]),t._v(" "),a("h2",{attrs:{id:"设置文件编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置文件编码"}},[t._v("#")]),t._v(" 设置文件编码")]),t._v(" "),a("p",[t._v("在项目开发初期就需要统一好项目中文件的编码方式，特别是一些配置文件（"),a("em",[t._v(".properties,")]),t._v(".yml）需要做些注释，java文件签名或者方式注释时。如果没有设置好文件编码，到中后期再设置容易导致文件既有UTF-8，又有GBK等其他编码方式，导致乱码，从而徒增编码转换的烦劳。File->Settings->Editor->File Encodings")]),t._v(" "),a("ol",[a("li",[t._v("选择Global Encoding UTF-8")]),t._v(" "),a("li",[t._v("选择Project Encoding UTF-8")]),t._v(" "),a("li",[t._v("注意再Path Encoding + 的项目目录、编码、增加目录选项设置")]),t._v(" "),a("li",[t._v("Properties File 的编码Default encoding for properties files UTF-8，并勾上“Transparent native-to-ascii conversion”")])]),t._v(" "),a("h2",{attrs:{id:"自动导包设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动导包设置"}},[t._v("#")]),t._v(" 自动导包设置")]),t._v(" "),a("p",[t._v("File->Settings->Editor->General->Auto Import->Java")]),t._v(" "),a("ol",[a("li",[t._v("勾选Optimize imports on the fly自动导入不明确的结构")]),t._v(" "),a("li",[t._v("勾选Add unambiguous imports ont thr fly自动帮我们优化导入的包")])]),t._v(" "),a("h2",{attrs:{id:"maven依赖包自动导包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven依赖包自动导包"}},[t._v("#")]),t._v(" MAVEN依赖包自动导包")]),t._v(" "),a("p",[t._v("在版本切换或者增加依赖包时，往往需要手动刷新导入依赖包，可设置自动导入避免操作上的繁琐。File->Settings->Build,Execution,Deployment->Build Tools->Maven->Importing->勾选Import Maven projects automatically")]),t._v(" "),a("h2",{attrs:{id:"代码自动编译设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码自动编译设置"}},[t._v("#")]),t._v(" 代码自动编译设置")]),t._v(" "),a("p",[t._v("IDEA默认是不帮我们编译的，一般我们会设置自动编译.File->Settings->Build,Execution,Deployment->Compiler->勾选Build project automatically")]),t._v(" "),a("h2",{attrs:{id:"显示多个tabs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示多个tabs"}},[t._v("#")]),t._v(" 显示多个Tabs")]),t._v(" "),a("p",[t._v("IDEA默认是在一行中显示打开的文件的，当在开发过程中，打开了很多的文件，这项设置就现得比较方便查看到底打开了哪些文件，并在文件之间进行切换。File->settings->Editor->General->Editor Tabs->勾选掉Show tabs in single row")]),t._v(" "),a("h2",{attrs:{id:"idea重启-清理缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#idea重启-清理缓存"}},[t._v("#")]),t._v(" IDEA重启/清理缓存")]),t._v(" "),a("p",[t._v("开发过程中，如果怀疑是IDEA加载的缓存导致的问题，或者你需要重新加载下项目。File->Invalidate cache/Restart->选择Invalidate and Restart(清除IDEA缓存并重启) /Invalidate(清除IDEA缓存)/Just Restart(不清除缓存直接重启)")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("在选择Invalidate and Restart后，IDEA重启完成加载项目，JDK和MAVEN的设置也会重置为默认，需要重新设置。")])]),t._v(" "),a("h2",{attrs:{id:"忽略idea的一些文件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略idea的一些文件类型"}},[t._v("#")]),t._v(" 忽略IDEA的一些文件类型")]),t._v(" "),a("p",[t._v("在正常的IDEA默认设置中打开的项目，有IDEA的项目配置文件（"),a("em",[t._v(".iml 和")]),t._v(".idea）总影响目录结构的美观度，打开File->Settings->Editor->File Types->Ignore file and folders加入要隐藏的文件后缀或者文件夹均可。")]),t._v(" "),a("h2",{attrs:{id:"展示内存使用量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#展示内存使用量"}},[t._v("#")]),t._v(" 展示内存使用量")]),t._v(" "),a("p",[t._v("在日常开发项目过程中，项目启动过多时常导致电脑运行缓慢，内存不够用。监控内存使用情况，有时就能方便开发人员定位问题。File->Settings->Appearance & Behavior->Appearance->Window Options->勾选Show Memory indicator")]),t._v(" "),a("h2",{attrs:{id:"默认settings设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认settings设置"}},[t._v("#")]),t._v(" 默认settings设置")]),t._v(" "),a("p",[t._v("在FIle下菜单中有个settings/Project Structure/Other Settings，其中Other Settings中的Default Settings/Default Project Structure相当于一个IDEA的设置模板，当新建一个项目后，使用Other Settings设置的选项，会使用到新项目中。而通过FIle下的settings/Project Structure是使用到当前项目的设置。")]),t._v(" "),a("h2",{attrs:{id:"项目目录结构扁平折叠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目目录结构扁平折叠"}},[t._v("#")]),t._v(" 项目目录结构扁平折叠")]),t._v(" "),a("p",[t._v("默认情况下，IDEA在打开project后空目录都是折叠的,我们在打开具体文件时就不会一个一个去展开文件夹，如果不是可以设置：Project的设置下拉菜单->Hide Empty Middle Packages")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("Ctrl+Alt+S可直接调出File->Settings页面\n如果大概知道自己设置的选项的keyword，可以直接在File->settings弹框中搜索。\nIDEA的设置需要勾选或设置好后点击Apply->Ok")])])])}),[],!1,null,null,null);e.default=s.exports}}]);